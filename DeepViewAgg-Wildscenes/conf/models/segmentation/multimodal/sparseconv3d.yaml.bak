# @package models
defaults:
  - segmentation/default

Res16UNet21-15_Res16Image21_encoder_max:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: [ 0, 2, 2, 2, 2 ]
                    stride: [ 1, 2, 2, 2, 2 ]
                    kernel_size: [ 3, 2, 2, 2, 2 ]
                    padding: [ 1, 0, 0, 0, 0 ]
                    down_conv_nn:
                      [
                          [ in_feat_img, in_feat ],
                          [ in_feat, in_feat ],
                          [ in_feat, 2*in_feat ],
                          [ 2*in_feat, 4*in_feat ],
                          [ 4*in_feat, 8*in_feat ],
                      ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                fusion:
                    module_name: BimodalFusion
                    mode: residual
                branching_index: [ 1, 2, 3, 4, 5 ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
              ]

Res16UNet21-15-light_Res16Image21_encoder_max:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: [ 0, 2, 2, 2, 2 ]
                    stride: [ 1, 2, 2, 2, 2 ]
                    kernel_size: [ 3, 2, 2, 2, 2 ]
                    padding: [ 1, 0, 0, 0, 0 ]
                    down_conv_nn:
                      [
                          [ in_feat_img, in_feat ],
                          [ in_feat, in_feat ],
                          [ in_feat, 2*in_feat ],
                          [ 2*in_feat, 4*in_feat ],
                          [ 4*in_feat, 8*in_feat ],
                      ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                fusion:
                    module_name: BimodalFusion
                    mode: residual
                branching_index: [ 1, 2, 3, 4, 5 ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

Res16UNet21-15_Res16Image21_encoder_max_concatenation:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat + 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat + 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat + 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: [ 0, 2, 2, 2, 2 ]
                    stride: [ 1, 2, 2, 2, 2 ]
                    kernel_size: [ 3, 2, 2, 2, 2 ]
                    padding: [ 1, 0, 0, 0, 0 ]
                    down_conv_nn:
                      [
                          [ in_feat_img, in_feat ],
                          [ in_feat, in_feat ],
                          [ in_feat, 2*in_feat ],
                          [ 2*in_feat, 4*in_feat ],
                          [ 4*in_feat, 8*in_feat ],
                      ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: [ 1, 2, 3, 4, 5 ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
              ]

Res16UNet21-15-light_Res16Image21_encoder_max_concatenation:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat + 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat + 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat + 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: [ 0, 2, 2, 2, 2 ]
                    stride: [ 1, 2, 2, 2, 2 ]
                    kernel_size: [ 3, 2, 2, 2, 2 ]
                    padding: [ 1, 0, 0, 0, 0 ]
                    down_conv_nn:
                      [
                          [ in_feat_img, in_feat ],
                          [ in_feat, in_feat ],
                          [ in_feat, 2*in_feat ],
                          [ 2*in_feat, 4*in_feat ],
                          [ 4*in_feat, 8*in_feat ],
                      ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: [ 1, 2, 3, 4, 5 ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

Res16UNet21-15_Res16Image21_encoder_max_both:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat + 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat + 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat + 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: [ 0, 2, 2, 2, 2 ]
                    stride: [ 1, 2, 2, 2, 2 ]
                    kernel_size: [ 3, 2, 2, 2, 2 ]
                    padding: [ 1, 0, 0, 0, 0 ]
                    down_conv_nn:
                      [
                          [ in_feat_img, in_feat ],
                          [ in_feat, in_feat ],
                          [ in_feat, 2*in_feat ],
                          [ 2*in_feat, 4*in_feat ],
                          [ 4*in_feat, 8*in_feat ],
                      ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                fusion:
                    module_name: BimodalFusion
                    mode: both
                branching_index: [ 1, 2, 3, 4, 5 ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
              ]

Res16UNet21-15-light_Res16Image21_encoder_max_both:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat + 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat + 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat + 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: [ 0, 2, 2, 2, 2 ]
                    stride: [ 1, 2, 2, 2, 2 ]
                    kernel_size: [ 3, 2, 2, 2, 2 ]
                    padding: [ 1, 0, 0, 0, 0 ]
                    down_conv_nn:
                      [
                          [ in_feat_img, in_feat ],
                          [ in_feat, in_feat ],
                          [ in_feat, 2*in_feat ],
                          [ 2*in_feat, 4*in_feat ],
                          [ 4*in_feat, 8*in_feat ],
                      ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                fusion:
                    module_name: BimodalFusion
                    mode: both
                branching_index: [ 1, 2, 3, 4, 5 ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

Res16UNet21-15_Res16Image21_encoder_mean:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: [ 0, 2, 2, 2, 2 ]
                    stride: [ 1, 2, 2, 2, 2 ]
                    kernel_size: [ 3, 2, 2, 2, 2 ]
                    padding: [ 1, 0, 0, 0, 0 ]
                    down_conv_nn:
                      [
                          [ in_feat_img, in_feat ],
                          [ in_feat, in_feat ],
                          [ in_feat, 2*in_feat ],
                          [ 2*in_feat, 4*in_feat ],
                          [ 4*in_feat, 8*in_feat ],
                      ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: BimodalCSRPool
                    mode: mean
                fusion:
                    module_name: BimodalFusion
                    mode: residual
                branching_index: [ 1, 2, 3, 4, 5 ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
              ]

Res16UNet21-15_Res16Image21_late_max:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.LateFeatureFusion
    conv_type: "SPARSE"
    backend: "torchsparse"

    backbone_3d: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            block: ResBlock
        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0, 2, 2, 2, 2 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]
        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
              ]

    backbone_no3d: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            strided_k: 2
            strided_s: 2
            strided_p: 0

        down_conv:
            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: [ 0, 2, 2, 2, 2 ]
                    stride: [ 1, strided_s, strided_s, strided_s, strided_s ]
                    kernel_size: [ 3, strided_k, strided_k, strided_k, strided_k ]
                    padding: [ 1, strided_p, strided_p, strided_p, strided_p ]
                    down_conv_nn:
                      [
                          [ in_feat_img, in_feat ],
                          [ in_feat, in_feat ],
                          [ in_feat, 2*in_feat ],
                          [ 2*in_feat, 4*in_feat ],
                          [ 4*in_feat, 8*in_feat ],
                      ]
                up_conv:
                    module_name: ResNetUp
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: 1
                    kernel_size: [ strided_k, strided_k, strided_k, strided_k, 3 ]
                    stride: [ strided_s, strided_s, strided_s, strided_s, 1 ]
                    padding: [ strided_p, strided_p, strided_p, strided_p, 1 ]
                    up_conv_nn:
                      [
                          [ 8*in_feat, 4*in_feat, 4*in_feat ],
                          [ 4*in_feat, 2*in_feat, 4*in_feat ],
                          [ 4*in_feat, in_feat, 3*in_feat ],
                          [ 3*in_feat, in_feat, 3*in_feat ],
                          [ 3*in_feat, 0, 3*in_feat ],
                      ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                fusion:
                    module_name: BimodalFusion
                    mode: residual
                branching_index: 1

Res16UNet21-15_Res16Image21_late_mean:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.LateLogitFusion
    conv_type: "SPARSE"
    backend: "torchsparse"

    backbone_3d: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            block: ResBlock
        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0, 2, 2, 2, 2 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]
        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
              ]

    backbone_no3d: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            strided_k: 2
            strided_s: 2
            strided_p: 0

        down_conv:
            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: [ 0, 2, 2, 2, 2 ]
                    stride: [ 1, strided_s, strided_s, strided_s, strided_s ]
                    kernel_size: [ 3, strided_k, strided_k, strided_k, strided_k ]
                    padding: [ 1, strided_p, strided_p, strided_p, strided_p ]
                    down_conv_nn:
                      [
                          [ in_feat_img, in_feat ],
                          [ in_feat, in_feat ],
                          [ in_feat, 2*in_feat ],
                          [ 2*in_feat, 4*in_feat ],
                          [ 4*in_feat, 8*in_feat ],
                      ]
                up_conv:
                    module_name: ResNetUp
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: 1
                    kernel_size: [ strided_k, strided_k, strided_k, strided_k, 3 ]
                    stride: [ strided_s, strided_s, strided_s, strided_s, 1 ]
                    padding: [ strided_p, strided_p, strided_p, strided_p, 1 ]
                    up_conv_nn:
                      [
                          [ 8*in_feat, 4*in_feat, 4*in_feat ],
                          [ 4*in_feat, 2*in_feat, 4*in_feat ],
                          [ 4*in_feat, in_feat, 3*in_feat ],
                          [ 3*in_feat, in_feat, 3*in_feat ],
                          [ 3*in_feat, 0, 3*in_feat ],
                      ]
                last_conv:
                    input_nc: 3*in_feat
                    output_nc: N_CLS
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: BimodalCSRPool
                    mode: mean
                fusion:
                    module_name: BimodalFusion
                    mode: residual
                branching_index: 1

Res16UNet21-15-light_early_mean_concatenation:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 3
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + in_feat_img, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    down_conv_nn: [ [ -1, -1 ] ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: BimodalCSRPool
                    mode: mean
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 0

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

Res16UNet21-15_ResImage3_light_0_mean_concatenation:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: 2
                    stride: 1
                    kernel_size: 3
                    padding: 1
                    down_conv_nn: [ [ in_feat_img, in_feat ] ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: BimodalCSRPool
                    mode: mean
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 0

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

Res16UNet21-15_ResImage3_light_1_mean_concatenation:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: 2
                    stride: 1
                    kernel_size: 3
                    padding: 1
                    down_conv_nn: [ [ in_feat_img, in_feat ] ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: BimodalCSRPool
                    mode: mean
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 1

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

Res16UNet21-15_ResImage3_light_2_mean_concatenation:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: 2
                    stride: 1
                    kernel_size: 3
                    padding: 1
                    down_conv_nn: [ [ in_feat_img, in_feat ] ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: BimodalCSRPool
                    mode: mean
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 2

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

Res16UNet21-15_ResImage3_light_3_mean_concatenation:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat + in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: 2
                    stride: 1
                    kernel_size: 3
                    padding: 1
                    down_conv_nn: [ [ in_feat_img, in_feat ] ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: BimodalCSRPool
                    mode: mean
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 3

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

Res16UNet21-15_ResImage3_light_4_mean_concatenation:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat + in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: 2
                    stride: 1
                    kernel_size: 3
                    padding: 1
                    down_conv_nn: [ [ in_feat_img, in_feat ] ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: BimodalCSRPool
                    mode: mean
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 4

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

Res16UNet21-15_ResImage3_light_5_mean_concatenation:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat + in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: 2
                    stride: 1
                    kernel_size: 3
                    padding: 1
                    down_conv_nn: [ [ in_feat_img, in_feat ] ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: BimodalCSRPool
                    mode: mean
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 5

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

Res16UNet21-15_ResImage3_light_1_a4_concatenation:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: 2
                    stride: 1
                    kernel_size: 3
                    padding: 1
                    down_conv_nn: [ [ in_feat_img, in_feat ] ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: AttentiveBimodalCSRPool
                    in_main: in_feat
                    in_map: in_feat_map
                    in_score: in_feat_attention
                    gating: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 1

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

Res16UNet21-15_ResImage3_light_1_a8_concatenation:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 8
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: 2
                    stride: 1
                    kernel_size: 3
                    padding: 1
                    down_conv_nn: [ [ in_feat_img, in_feat ] ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: AttentiveBimodalCSRPool
                    in_main: in_feat
                    in_map: in_feat_map
                    in_score: in_feat_attention
                    gating: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 1

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

Res16UNet21-15_ResImage6_light_12_a4_concatenation:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: [ 2, 2 ]
                    stride: [ 1, 2 ]
                    kernel_size: [ 3, 2 ]
                    padding: [ 1, 0 ]
                    down_conv_nn:
                      [
                          [ in_feat_img, in_feat ],
                          [ in_feat, in_feat ],
                      ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: AttentiveBimodalCSRPool
                    in_main: [ in_feat, in_feat ]
                    in_map: in_feat_map
                    in_score: in_feat_attention
                    gating: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: [ 1, 2 ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

Res16UNet21-15_ResImage9_light_123_a4_concatenation:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat + 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: [ 2, 2, 2 ]
                    stride: [ 1, 2, 2 ]
                    kernel_size: [ 3, 2, 2 ]
                    padding: [ 1, 0, 0 ]
                    down_conv_nn:
                      [
                          [ in_feat_img, in_feat ],
                          [ in_feat, in_feat ],
                          [ in_feat, 2*in_feat ],
                      ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: AttentiveBimodalCSRPool
                    in_main: [ in_feat, in_feat, 2*in_feat ]
                    in_map: in_feat_map
                    in_score: in_feat_attention
                    gating: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: [ 1, 2, 3 ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ+RGB_a4-group_cat-1:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: 2
                    stride: 1
                    kernel_size: 3
                    padding: 1
                    down_conv_nn: [ [ in_feat_img, in_feat ] ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: AttentiveBimodalCSRPool
                    in_main: in_feat
                    in_map: in_feat_map
                    in_score: in_feat_attention
                    gating: True
                    dim_scaling: False
                    group_scaling: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 1

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ+RGB_a4-dim_cat-1:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: 2
                    stride: 1
                    kernel_size: 3
                    padding: 1
                    down_conv_nn: [ [ in_feat_img, in_feat ] ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: AttentiveBimodalCSRPool
                    in_main: in_feat
                    in_map: in_feat_map
                    in_score: in_feat_attention
                    gating: True
                    dim_scaling: True
                    group_scaling: False
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 1

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ+RGB_a4-mod-dim_cat-1:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: 2
                    stride: 1
                    kernel_size: 3
                    padding: 1
                    down_conv_nn: [ [ in_feat_img, in_feat ] ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: AttentiveBimodalCSRPool
                    in_main: in_feat
                    in_map: in_feat_map
                    in_mod: in_feat
                    in_score: in_feat_attention
                    gating: True
                    dim_scaling: True
                    group_scaling: False
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 1

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ+RGB_a4-mod-group_cat-1:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: 2
                    stride: 1
                    kernel_size: 3
                    padding: 1
                    down_conv_nn: [ [ in_feat_img, in_feat ] ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: AttentiveBimodalCSRPool
                    in_main: in_feat
                    in_map: in_feat_map
                    in_mod: in_feat
                    in_score: in_feat_attention
                    gating: True
                    dim_scaling: False
                    group_scaling: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 1

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ+RGB_a4-dim-min-max_cat-1:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: 2
                    stride: 1
                    kernel_size: 3
                    padding: 1
                    down_conv_nn: [ [ in_feat_img, in_feat ] ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: AttentiveBimodalCSRPool
                    in_main: in_feat
                    in_map: in_feat_map
                    in_score: in_feat_attention
                    use_map_min: True
                    use_map_max: True
                    gating: True
                    dim_scaling: True
                    group_scaling: False
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 1

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ+RGB_a4-dim-min-max-num_cat-1:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: 2
                    stride: 1
                    kernel_size: 3
                    padding: 1
                    down_conv_nn: [ [ in_feat_img, in_feat ] ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: AttentiveBimodalCSRPool
                    in_main: in_feat
                    in_map: in_feat_map
                    in_score: in_feat_attention
                    use_map_min: True
                    use_map_max: True
                    use_map_num: True
                    gating: True
                    dim_scaling: True
                    group_scaling: False
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 1

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ+RGB_a4-dim-num_cat-1:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: 2
                    stride: 1
                    kernel_size: 3
                    padding: 1
                    down_conv_nn: [ [ in_feat_img, in_feat ] ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: AttentiveBimodalCSRPool
                    in_main: in_feat
                    in_map: in_feat_map
                    in_score: in_feat_attention
                    use_map_num: True
                    gating: True
                    dim_scaling: True
                    group_scaling: False
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 1

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ+RGB_a4-mod-dim_cat-1_debug:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: 2
                    stride: 1
                    kernel_size: 3
                    padding: 1
                    down_conv_nn: [ [ in_feat_img, in_feat ] ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: AttentiveBimodalCSRPool
                    in_main: in_feat
                    in_map: in_feat_map
                    in_mod: in_feat
                    in_score: in_feat_attention
                    gating: True
                    debug: True
                    dim_scaling: True
                    group_scaling: False
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 1

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ+RGB_a4-mod-dim_cat-1_drop_debug:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNetDown
                    block: ResBlock
                    normalization: GroupNorm
                    weight_standardization: True
                    N: 2
                    stride: 1
                    kernel_size: 3
                    padding: 1
                    down_conv_nn: [ [ in_feat_img, in_feat ] ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: AttentiveBimodalCSRPool
                    in_main: in_feat
                    in_map: in_feat_map
                    in_mod: in_feat
                    in_score: in_feat_attention
                    gating: True
                    debug: True
                    dim_scaling: True
                    group_scaling: False
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: 0.2
                drop_mod: 0.2
                branching_index: 1

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-ResNet18_RGB-ResNet18TruncatedLayer0-0-nomod-DeepSetFeat:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 64  # out dim of ResNet18Layer0

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNet18TruncatedLayer0
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 0

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-ResNet18_RGB-ResNet18TruncatedLayer0-1-nomod-DeepSetFeat:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 64  # out dim of ResNet18Layer0

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + out_feat_img_0 , in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNet18TruncatedLayer0
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 1

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-ResNet18_RGB-ResNet18TruncatedLayer0-2-nomod-DeepSetFeat:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 64  # out dim of ResNet18Layer0

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat , in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat + out_feat_img_0, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNet18TruncatedLayer0
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 2

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-ResNet18_RGB-ResNet18TruncatedLayer0-3-nomod-DeepSetFeat:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 64  # out dim of ResNet18Layer0

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat , in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat + out_feat_img_0, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNet18TruncatedLayer0
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 3

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-ResNet18_RGB-ResNet18TruncatedLayer0-4-nomod-DeepSetFeat:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 64  # out dim of ResNet18Layer0

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat , in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat + out_feat_img_0, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNet18TruncatedLayer0
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 4

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-ResNet18_RGB-ResNet18TruncatedLayer0-5-nomod-DeepSetFeat:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 64  # out dim of ResNet18Layer0

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat , in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat + out_feat_img_0, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ResNet18TruncatedLayer0
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 5

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-ResNet18_RGB-ADE20KResNet18TruncatedLayer0-0-nomod-DeepSetFeat:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 128  # out dim of ResNet18Layer0

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer0
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 0

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-ResNet18_RGB-ADE20KResNet18TruncatedLayer0-1-nomod-DeepSetFeat:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 128  # out dim of ResNet18Layer0

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + out_feat_img_0 , in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer0
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 1

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-L4-L0:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, in_feat ],
                  [ in_feat , in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 0

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-L4-L0-ckpt:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, in_feat ],
                  [ in_feat , in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 0
                checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-L4-L0_ckpt:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, in_feat ],
                  [ in_feat , in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 0
                checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-L4-L1:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat + out_feat_img_0 , in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 1

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-L4-L2:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat , in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat + out_feat_img_0, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 2

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-L4-L3:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat , in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat + out_feat_img_0, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 3

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-L4-L4:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat , in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat + out_feat_img_0, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 4

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-L4-L5:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat , in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat + out_feat_img_0, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 5

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-align-0:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 128
            out_feat_img_1: 64
            out_feat_img_2: 128
            out_feat_img_3: 256
            out_feat_img_4: 512

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, in_feat ],
                  [ in_feat + out_feat_img_1, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat + out_feat_img_2, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat + out_feat_img_3, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat + out_feat_img_4, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: [
                        ADE20KResNet18Layer0,
                        ADE20KResNet18Layer1,
                        ADE20KResNet18Layer2,
                        ADE20KResNet18Layer3,
                        ADE20KResNet18Layer4
                    ]
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: [
                        out_feat_img_0,
                        out_feat_img_1,
                        out_feat_img_2,
                        out_feat_img_3,
                        out_feat_img_4
                    ]
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: [0, 1, 2, 3, 4]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-L4-all:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_4: 512

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_4, in_feat ],
                  [ in_feat + out_feat_img_4, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat + out_feat_img_4, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat + out_feat_img_4, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat + out_feat_img_4, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat + out_feat_img_4, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: [
                        ADE20KResNet18TruncatedLayer4,
                        ModalityIdentity,
                        ModalityIdentity,
                        ModalityIdentity,
                        ModalityIdentity,
                        ModalityIdentity
                    ]
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_4
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: [0, 1, 2, 3, 4, 5]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-L4-all-scale-2:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_4: 512

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_4, in_feat ],
                  [ in_feat + out_feat_img_4, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat + out_feat_img_4, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat + out_feat_img_4, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat + out_feat_img_4, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat + out_feat_img_4, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: [
                        ADE20KResNet18TruncatedLayer4,
                        ModalityIdentity,
                        ModalityIdentity,
                        ModalityIdentity,
                        ModalityIdentity,
                        ModalityIdentity
                    ]
                    frozen: False
                    scale_factor: 2
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_4
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: [0, 1, 2, 3, 4, 5]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-pyramid-all-scale-2:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_4: 1088

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_4, in_feat ],
                  [ in_feat + out_feat_img_4, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat + out_feat_img_4, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat + out_feat_img_4, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat + out_feat_img_4, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat + out_feat_img_4, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: [
                        ADE20KResNet18Pyramid,
                        ModalityIdentity,
                        ModalityIdentity,
                        ModalityIdentity,
                        ModalityIdentity,
                        ModalityIdentity
                    ]
                    frozen: False
                    scale_factor: 2
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_4
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: [0, 1, 2, 3, 4, 5]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-pyramid-0-scale-2:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img: 1088

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18Pyramid
                    frozen: False
                    scale_factor: 2
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 0

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-pyramid-0_out-64:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img: 1088

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat ],

                  [ 2*in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18Pyramid
                    frozen: False
                    scale_factor: 1
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 0

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat, 2*in_feat ],
                  [ 2*in_feat, 0, 2*in_feat ],
              ]

XYZ-RGB-pyramid-0_out-64_ckpt:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img: 1088

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat ],

                  [ 2*in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18Pyramid
                    frozen: False
                    scale_factor: 1
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 0
                checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat, 2*in_feat ],
                  [ 2*in_feat, 0, 2*in_feat ],
              ]

XYZ-RGB-pyramid-0_out-128:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img: 1088

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img, 8*in_feat ],
                  [ 8*in_feat, 4*in_feat ],

                  [ 4*in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18Pyramid
                    frozen: False
                    scale_factor: 1
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 0

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 0, 4*in_feat ],
              ]

XYZ-RGB-pyramid-0_out-128_ckpt:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img: 1088

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img, 8*in_feat ],
                  [ 8*in_feat, 4*in_feat ],

                  [ 4*in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18Pyramid
                    frozen: False
                    scale_factor: 1
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 0
                checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 0, 4*in_feat ],
              ]

XYZ-RGB-L4-L0_minmax:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, in_feat ],
                  [ in_feat , in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    pool: min_max
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 0

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-L4-L0_use-mod:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, in_feat ],
                  [ in_feat , in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: True
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 0

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-L4-L0_g-8:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, in_feat ],
                  [ in_feat , in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 8
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 0

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-L4-L0_drop2d-20:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, in_feat ],
                  [ in_feat , in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: 0.2
                branching_index: 0

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-L4-L0_harddrop2d-50:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, in_feat ],
                  [ in_feat , in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: 0.5
                hard_drop: True
                branching_index: 0

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-PointPyramid-0:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 128
            out_feat_img_1: 64
            out_feat_img_2: 128
            out_feat_img_3: 256
            out_feat_img_4: 512
            out_feat_img_pyramid: 1088

        down_conv:
            n_early_conv: 5
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_pyramid, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: [
                        ADE20KResNet18Layer0,
                        ADE20KResNet18Layer1,
                        ADE20KResNet18Layer2,
                        ADE20KResNet18Layer3,
                        ADE20KResNet18Layer4
                    ]
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: [
                        out_feat_img_0,
                        out_feat_img_1,
                        out_feat_img_2,
                        out_feat_img_3,
                        out_feat_img_4
                    ]
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: [0, 1, 2, 3, 4]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-PointPyramid-0_ckpt:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 128
            out_feat_img_1: 64
            out_feat_img_2: 128
            out_feat_img_3: 256
            out_feat_img_4: 512
            out_feat_img_pyramid: 1088

        down_conv:
            n_early_conv: 5
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_pyramid, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: [
                        ADE20KResNet18Layer0,
                        ADE20KResNet18Layer1,
                        ADE20KResNet18Layer2,
                        ADE20KResNet18Layer3,
                        ADE20KResNet18Layer4
                    ]
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: [
                        out_feat_img_0,
                        out_feat_img_1,
                        out_feat_img_2,
                        out_feat_img_3,
                        out_feat_img_4
                    ]
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: [0, 1, 2, 3, 4]
                checkpointing: [ cav, cav, cav, cav, cav ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-PointPyramid-0_out-64_ckpt:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 128
            out_feat_img_1: 64
            out_feat_img_2: 128
            out_feat_img_3: 256
            out_feat_img_4: 512
            out_feat_img_pyramid: 1088

        down_conv:
            n_early_conv: 5
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_pyramid, 4 * in_feat ],
                  [ 4 * in_feat, 2 * in_feat ],

                  [ 2 * in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: [
                        ADE20KResNet18Layer0,
                        ADE20KResNet18Layer1,
                        ADE20KResNet18Layer2,
                        ADE20KResNet18Layer3,
                        ADE20KResNet18Layer4
                    ]
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: [
                        out_feat_img_0,
                        out_feat_img_1,
                        out_feat_img_2,
                        out_feat_img_3,
                        out_feat_img_4
                    ]
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: [0, 1, 2, 3, 4]
                checkpointing: [ cav, cav, cav, cav, cav ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat, 2*in_feat ],
                  [ 2*in_feat, 0, 2*in_feat ],
              ]

XYZ-RGB-PointPyramid-0_out-128_ckpt:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 128
            out_feat_img_1: 64
            out_feat_img_2: 128
            out_feat_img_3: 256
            out_feat_img_4: 512
            out_feat_img_pyramid: 1088

        down_conv:
            n_early_conv: 5
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_pyramid, 8 * in_feat ],
                  [ 8 * in_feat, 4 * in_feat ],

                  [ 2 * in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: [
                        ADE20KResNet18Layer0,
                        ADE20KResNet18Layer1,
                        ADE20KResNet18Layer2,
                        ADE20KResNet18Layer3,
                        ADE20KResNet18Layer4
                    ]
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: [
                        out_feat_img_0,
                        out_feat_img_1,
                        out_feat_img_2,
                        out_feat_img_3,
                        out_feat_img_4
                    ]
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: [0, 1, 2, 3, 4]
                checkpointing: [ cav, cav, cav, cav, cav ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 0, 4*in_feat ],
              ]

XYZ-RGB-PPM-late:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.LateFeatureFusion
    conv_type: "SPARSE"
    backend: "torchsparse"
    mode: concatenation

    backbone_3d: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0, 2, 2, 2, 2 ]
            kernel_size: 3
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: 3
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

    backbone_no3d:
        down_conv:
            image:
                down_conv:
                    module_name: ADE20KResNet18PPM
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: 512
                    num_groups: 4
                    use_mod: False
                    gating: True
                    group_scaling: True
                    map_encoder: DeepSetFeat
                    use_num: True
                    pool: max
                    fusion: concatenation
                fusion:
                    module_name: BimodalFusion
                    mode: residual
                drop_mod: 0.1
                branching_index: 0

XYZ-RGB-L4-late:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.LateFeatureFusion
    conv_type: "SPARSE"
    backend: "torchsparse"
    mode: concatenation

    backbone_3d: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0, 2, 2, 2, 2 ]
            kernel_size: 3
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: 3
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

    backbone_no3d:
        down_conv:
            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: 512
                    num_groups: 4
                    use_mod: False
                    gating: True
                    group_scaling: True
                    map_encoder: DeepSetFeat
                    use_num: True
                    pool: max
                    fusion: concatenation
                fusion:
                    module_name: BimodalFusion
                    mode: residual
                drop_mod: 0.1
                branching_index: 0

XYZ-RGB-L4-L0_pool-inner-64:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0,0,  0,2,  0,2,  0,2,  0,2 ]
            kernel_size: [ 3,3,  2,3,  2,3,  2,3,  2,3 ]
            stride: [ 1,1,  2,1,  2,1,  2,1,  2,1 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, in_feat ],
                  [ in_feat , in_feat ],

                  [ in_feat, in_feat ],
                  [ in_feat, in_feat ],

                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 2*in_feat ],

                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 4*in_feat ],

                  [ 4*in_feat, 8*in_feat ],
                  [ 8*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                    nc_inner: 64
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 0

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

XYZ-RGB-L4-late-QKV:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.LateFeatureFusion
    conv_type: "SPARSE"
    backend: "torchsparse"
    mode: concatenation

    backbone_3d: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0, 2, 2, 2, 2 ]
            kernel_size: 3
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: 3
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

    backbone_no3d:
        down_conv:
            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: QKVBimodalCSRPool
                    in_main: 32
                    in_map: 8
                    in_mod: 512
                    num_groups: 4
                    use_mod_q: False
                    use_mod_k: False
                    gating: True
                    group_scaling: True
                    map_encoder: DeepSetFeat
                    use_num: True
                    pool: max
                    fusion: concatenation
                fusion:
                    module_name: BimodalFusion
                    mode: modality
                drop_mod: 0.1
                branching_index: 0

XYZ-RGB-L4-late-QKV-modk:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.LateFeatureFusion
    conv_type: "SPARSE"
    backend: "torchsparse"
    mode: concatenation

    backbone_3d: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0, 2, 2, 2, 2 ]
            kernel_size: 3
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: 3
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 2*in_feat ],
                  [ 2*in_feat, in_feat, in_feat ],
                  [ in_feat, 0, in_feat ],
              ]

    backbone_no3d:
        down_conv:
            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: QKVBimodalCSRPool
                    in_main: 32
                    in_map: 8
                    in_mod: 512
                    num_groups: 4
                    use_mod_q: False
                    use_mod_k: True
                    gating: True
                    group_scaling: True
                    map_encoder: DeepSetFeat
                    use_num: True
                    pool: max
                    fusion: concatenation
                fusion:
                    module_name: BimodalFusion
                    mode: modality
                drop_mod: None
                branching_index: 0

#-----------------------------------------------------------------------

ResUNet34-L4-L0:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 1, 1, 2, 2, 3 ]
            kernel_size: [ 1, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, in_feat ],
                  [ in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 0
                checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 0 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

ResUNet34-L4-L0-96:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 1, 1, 2, 2, 3 ]
            kernel_size: [ 1, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, 3*in_feat ],
                  [ 3*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 0
                checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 0 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 3*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]
            
ResUNet34-L4-L0-96-harddrop50:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 1, 1, 2, 2, 3 ]
            kernel_size: [ 1, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, 3*in_feat ],
                  [ 3*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: 0.5
                hard_drop: True
                branching_index: 0
                checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 0 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 3*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

ResUNet34-L4-L0-128:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 1, 1, 2, 2, 3 ]
            kernel_size: [ 1, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 0
                checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 0 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

ResUNet34-L4-L0-128-harddrop50:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 1, 1, 2, 2, 3 ]
            kernel_size: [ 1, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: 0.5
                hard_drop: True
                branching_index: 0
                checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 0 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

ResUNet34-L4-L0-256:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 1, 1, 2, 2, 3 ]
            kernel_size: [ 1, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, 8*in_feat ],
                  [ 8*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 0
                checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 0 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 8*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

ResUNet34-L4-L0-256-harddrop50:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 1, 1, 2, 2, 3 ]
            kernel_size: [ 1, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, 8*in_feat ],
                  [ 8*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: 0.5
                hard_drop: True
                branching_index: 0
                checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 0 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 8*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

ResUNet34-PointPyramid-0-128-harddrop50:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_l0: 128
            out_l1: 64
            out_l2: 128
            out_l3: 256
            out_l4: 512
            out_pyramid: 128

        down_conv:
            n_early_conv: 5
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 1, 1, 2, 2, 3 ]
            kernel_size: [ 1, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_pyramid, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: [ ADE20KResNet18Layer0, ADE20KResNet18Layer1, ADE20KResNet18Layer2, ADE20KResNet18Layer3, ADE20KResNet18Layer4 ]
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: [ out_l0, out_l1, out_l2, out_l3, out_l4 ]
                    out_mod: [ 16, 16, 16, 16, 64 ]
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: [ 0, 1, 2, 3, 4 ]
                drop_3d: None
                drop_mod: 0.5
                hard_drop: True
                checkpointing: c

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 0 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]


ResUNet34-PointPyramid-0-96_Emod:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_l0: 128
            out_l1: 64
            out_l2: 128
            out_l3: 256
            out_l4: 512
            out_pyramid: 1088

        down_conv:
            n_early_conv: 5
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 1, 1, 2, 2, 3 ]
            kernel_size: [ 1, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_pyramid, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: [ ADE20KResNet18Layer0, ADE20KResNet18Layer1, ADE20KResNet18Layer2, ADE20KResNet18Layer3, ADE20KResNet18Layer4 ]
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: [ out_l0, out_l1, out_l2, out_l3, out_l4 ]
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: [ 0, 1, 2, 3, 4 ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 0 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

ResUNet34-L4-L0-96_Emod:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 1, 1, 2, 2, 3 ]
            kernel_size: [ 1, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 0
                checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 0 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

ResUNet34-L4-late-QKV:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.LateFeatureFusion
    conv_type: "SPARSE"
    backend: "torchsparse"
    mode: concatenation

    backbone_3d: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0, 1, 2, 2, 3 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [2, 2, 2, 2, 3]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
              ]

    backbone_no3d:
        down_conv:
            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: QKVBimodalCSRPool
                    in_main: 96
                    in_map: 8
                    in_mod: 512
                    num_groups: 4
                    use_mod_q: False
                    use_mod_k: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: modality
                branching_index: 0

ResUNet34-L4-late-Group:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.LateFeatureFusion
    conv_type: "SPARSE"
    backend: "torchsparse"
    mode: concatenation

    backbone_3d: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0, 1, 2, 2, 3 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [2, 2, 2, 2, 3]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
              ]

    backbone_no3d:
        down_conv:
            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: 512
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: modality
                branching_index: 0

ResUNet34-PointPyramid-late-Group:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.LateFeatureFusion
    conv_type: "SPARSE"
    backend: "torchsparse"
    mode: concatenation

    backbone_3d: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0, 1, 2, 2, 3 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [2, 2, 2, 2, 3]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
              ]

    backbone_no3d:
        down_conv:
            n_early_conv: 5
            image:
                output_nc: 1088
                down_conv:
                    module_name: [ ADE20KResNet18Layer0, ADE20KResNet18Layer1, ADE20KResNet18Layer2, ADE20KResNet18Layer3, ADE20KResNet18Layer4 ]
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: [ 128, 64, 128, 256, 512 ]
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: [modality, concatenation, concatenation, concatenation, concatenation]
                branching_index: [ 0, 1, 2, 3, 4 ]

ResUNet34-PointPyramid-late-QKV:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.LateFeatureFusion
    conv_type: "SPARSE"
    backend: "torchsparse"
    mode: concatenation

    backbone_3d: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0, 1, 2, 2, 3 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [2, 2, 2, 2, 3]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
              ]

    backbone_no3d:
        down_conv:
            n_early_conv: 5
            image:
                output_nc: 1184
                down_conv:
                    module_name: [ ADE20KResNet18Layer0, ADE20KResNet18Layer1, ADE20KResNet18Layer2, ADE20KResNet18Layer3, ADE20KResNet18Layer4 ]
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: QKVBimodalCSRPool
                    in_main: [ 96, 224, 288, 416, 672 ]
                    in_map: 8
                    in_mod: [ 128, 64, 128, 256, 512 ]
                    num_groups: 4
                    use_mod_q: False
                    use_mod_k: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: [ 0, 1, 2, 3, 4 ]

Res16UNet34-L4-L0:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, 3*in_feat ],
                  [ 3*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 0
                checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 3*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-L4-L0-harddrop50:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, 3*in_feat ],
                  [ 3*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: 0.5
                hard_drop: True
                branching_index: 0
                checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 3*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-L4-L0-lovasz:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    use_lovasz: True
    use_cross_entropy: True
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, 3*in_feat ],
                  [ 3*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 0

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 3*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-L4-L0-drop50-lovasz:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    use_lovasz: True
    use_cross_entropy: True
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, 3*in_feat ],
                  [ 3*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 0
                drop_3d: None
                drop_mod: 0.5
                hard_drop: True

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 3*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

ResUNet34-L4-early:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 1, 1, 2, 2, 3 ]
            kernel_size: [ 1, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                drop_3d: None
                drop_mod: None
                branching_index: 0
                checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 0 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-L4-early:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 0
#                 checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-L4-early-nogating:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                    gating: False
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 0
#                 checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-L4-early-fromscratch:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                    pretrained: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 0
#                 checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-mean-RGB-early:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + 3, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ModalityIdentity
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: BimodalCSRPool
                    mode: mean
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 0

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-max-RGB-early:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + 3, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ModalityIdentity
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 0

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-L4-early_MLPSetFeat:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: MLPSetFeat
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 0
#                 checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-L4-early-cityscapes:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 512  # out dim of CityscapesResNet18

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: CityscapesResNet18
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 0
                out_channels: FEAT + out_feat_img_0  # This is necessary to support batches with no images
#                 checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-L4-early-cityscapes-3:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 256  # out dim of CityscapesResNet18 layer3

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: CityscapesResNet18TruncatedLayer3
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 0
                out_channels: FEAT + out_feat_img_0  # This is necessary to support batches with no images
#                 checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-L4-early-cityscapes-2:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 128  # out dim of CityscapesResNet18 layer2

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: CityscapesResNet18TruncatedLayer2
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: out_feat_img_0
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 0
                out_channels: FEAT + out_feat_img_0  # This is necessary to support batches with no images
#                 checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-PointPyramid-early-cityscapes:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_l1: 64
            out_l2: 128
            out_l3: 256
            out_l4: 512

        down_conv:
            n_early_conv: 4
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_l1 + out_l2 + out_l3 + out_l4, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: [ CityscapesResNet18TruncatedLayer1, CityscapesResNet18Layer2, CityscapesResNet18Layer3, CityscapesResNet18Layer4 ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: [ out_l1, out_l2, out_l3, out_l4 ]
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: [ 0, 1, 2, 3 ]
                out_channels: [ FEAT + out_l1, FEAT + out_l1 + out_l2, FEAT + out_l1 + out_l2 + out_l3, FEAT + out_l1 + out_l2 + out_l3 + out_l4 ]  # This is necessary to support batches with no images
                checkpointing: c

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-PointPyramid-early-cityscapes-interpolate:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            l0: 128
            l1: 64
            l2: 128
            l3: 256
            l4: 512
            l0_map: 32
            l1_map: 32
            l2_map: 64
            l3_map: 128
            l4_map: 256

        down_conv:
            n_early_conv: 5
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + l0_map + l1_map + l2_map + l3_map + l4_map, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: [
                        CityscapesResNet18Layer0,
                        CityscapesResNet18Layer1,
                        CityscapesResNet18Layer2,
                        CityscapesResNet18Layer3,
                        CityscapesResNet18Layer4 ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: [ l0, l1, l2, l3, l4 ]
                    out_mod: [ l0_map, l1_map, l2_map, l3_map, l4_map ]
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: [ 0, 1, 2, 3, 4 ]
                out_channels: [
                        FEAT + l0_map,
                        FEAT + l0_map + l1_map,
                        FEAT + l0_map + l1_map + l2_map,
                        FEAT + l0_map + l1_map + l2_map + l3_map,
                        FEAT + l0_map + l1_map + l2_map + l3_map + l4_map ]  # This is necessary to support batches with no images
                checkpointing: c
                interpolate: True

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

ResUNet34-PointPyramid-early-cityscapes-interpolate:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            l0: 128
            l1: 64
            l2: 128
            l3: 256
            l4: 512
            l0_map: 32
            l1_map: 32
            l2_map: 64
            l3_map: 128
            l4_map: 256

        down_conv:
            n_early_conv: 5
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 1, 1, 2, 2, 3 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + l0_map + l1_map + l2_map + l3_map + l4_map, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: [
                        CityscapesResNet18Layer0,
                        CityscapesResNet18Layer1,
                        CityscapesResNet18Layer2,
                        CityscapesResNet18Layer3,
                        CityscapesResNet18Layer4 ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: [ l0, l1, l2, l3, l4 ]
                    out_mod: [ l0_map, l1_map, l2_map, l3_map, l4_map ]
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: [ 0, 1, 2, 3, 4 ]
                out_channels: [
                        FEAT + l0_map,
                        FEAT + l0_map + l1_map,
                        FEAT + l0_map + l1_map + l2_map,
                        FEAT + l0_map + l1_map + l2_map + l3_map,
                        FEAT + l0_map + l1_map + l2_map + l3_map + l4_map ]  # This is necessary to support batches with no images
                checkpointing: c
                interpolate: True

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-PointPyramid-late-cityscapes-interpolate:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.LateFeatureFusion
    conv_type: "SPARSE"
    backend: "torchsparse"
    mode: concatenation

    backbone_3d: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py

        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT, in_feat ],
                  [ in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [2, 2, 2, 2, 3]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
              [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
              ]

    backbone_no3d:
        define_constants:
            l0: 128
            l1: 64
            l2: 128
            l3: 256
            l4: 512
            l0_map: 32
            l1_map: 32
            l2_map: 64
            l3_map: 128
            l4_map: 256
            
        down_conv:
            n_early_conv: 5
            image:
                output_nc: l0_map + l1_map + l2_map + l3_map + l4_map                
                down_conv:
                    module_name: [
                        CityscapesResNet18Layer0,
                        CityscapesResNet18Layer1,
                        CityscapesResNet18Layer2,
                        CityscapesResNet18Layer3,
                        CityscapesResNet18Layer4 ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: [ l0, l1, l2, l3, l4 ]
                    out_mod: [ l0_map, l1_map, l2_map, l3_map, l4_map ]
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: [modality, concatenation, concatenation, concatenation, concatenation]
                branching_index: [ 0, 1, 2, 3, 4 ]
                out_channels: [
                        FEAT + l0_map,
                        FEAT + l0_map + l1_map,
                        FEAT + l0_map + l1_map + l2_map,
                        FEAT + l0_map + l1_map + l2_map + l3_map,
                        FEAT + l0_map + l1_map + l2_map + l3_map + l4_map ]  # This is necessary to support batches with no images
                checkpointing: c
                interpolate: True

Res16UNet34-PointPyramid-early-cityscapes-interpolate-nogating:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            l0: 128
            l1: 64
            l2: 128
            l3: 256
            l4: 512
            l0_map: 32
            l1_map: 32
            l2_map: 64
            l3_map: 128
            l4_map: 256

        down_conv:
            n_early_conv: 5
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + l0_map + l1_map + l2_map + l3_map + l4_map, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: [
                        CityscapesResNet18Layer0,
                        CityscapesResNet18Layer1,
                        CityscapesResNet18Layer2,
                        CityscapesResNet18Layer3,
                        CityscapesResNet18Layer4 ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: [ l0, l1, l2, l3, l4 ]
                    out_mod: [ l0_map, l1_map, l2_map, l3_map, l4_map ]
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                    gating: False
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: [ 0, 1, 2, 3, 4 ]
                out_channels: [
                        FEAT + l0_map,
                        FEAT + l0_map + l1_map,
                        FEAT + l0_map + l1_map + l2_map,
                        FEAT + l0_map + l1_map + l2_map + l3_map,
                        FEAT + l0_map + l1_map + l2_map + l3_map + l4_map ]  # This is necessary to support batches with no images
                checkpointing: c
                interpolate: True

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]


Res16UNet34-PointPyramid-early-fromscratch-interpolate:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            l0: 128
            l1: 64
            l2: 128
            l3: 256
            l4: 512
            l0_map: 32
            l1_map: 32
            l2_map: 64
            l3_map: 128
            l4_map: 256

        down_conv:
            n_early_conv: 5
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + l0_map + l1_map + l2_map + l3_map + l4_map, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: [
                        CityscapesResNet18Layer0,
                        CityscapesResNet18Layer1,
                        CityscapesResNet18Layer2,
                        CityscapesResNet18Layer3,
                        CityscapesResNet18Layer4 ]
                    pretrained: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: [ l0, l1, l2, l3, l4 ]
                    out_mod: [ l0_map, l1_map, l2_map, l3_map, l4_map ]
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: [ 0, 1, 2, 3, 4 ]
                out_channels: [
                        FEAT + l0_map,
                        FEAT + l0_map + l1_map,
                        FEAT + l0_map + l1_map + l2_map,
                        FEAT + l0_map + l1_map + l2_map + l3_map,
                        FEAT + l0_map + l1_map + l2_map + l3_map + l4_map ]  # This is necessary to support batches with no images
                checkpointing: c
                interpolate: True

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-PointPyramid-early-cityscapes-interpolate-group1:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            l0: 128
            l1: 64
            l2: 128
            l3: 256
            l4: 512
            l0_map: 32
            l1_map: 32
            l2_map: 64
            l3_map: 128
            l4_map: 256

        down_conv:
            n_early_conv: 5
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + l0_map + l1_map + l2_map + l3_map + l4_map, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: [
                        CityscapesResNet18Layer0,
                        CityscapesResNet18Layer1,
                        CityscapesResNet18Layer2,
                        CityscapesResNet18Layer3,
                        CityscapesResNet18Layer4 ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: [ l0, l1, l2, l3, l4 ]
                    out_mod: [ l0_map, l1_map, l2_map, l3_map, l4_map ]
                    num_groups: 1
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: [ 0, 1, 2, 3, 4 ]
                out_channels: [
                        FEAT + l0_map,
                        FEAT + l0_map + l1_map,
                        FEAT + l0_map + l1_map + l2_map,
                        FEAT + l0_map + l1_map + l2_map + l3_map,
                        FEAT + l0_map + l1_map + l2_map + l3_map + l4_map ]  # This is necessary to support batches with no images
                checkpointing: c
                interpolate: True

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-PointPyramid-early-max-cityscapes-interpolate:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            l0: 128
            l1: 64
            l2: 128
            l3: 256
            l4: 512
            l0_map: 128
            l1_map: 64
            l2_map: 128
            l3_map: 256
            l4_map: 512

        down_conv:
            n_early_conv: 5
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + l0_map + l1_map + l2_map + l3_map + l4_map, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: [
                        CityscapesResNet18Layer0,
                        CityscapesResNet18Layer1,
                        CityscapesResNet18Layer2,
                        CityscapesResNet18Layer3,
                        CityscapesResNet18Layer4 ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: [ 0, 1, 2, 3, 4 ]
                out_channels: [
                        FEAT + l0_map,
                        FEAT + l0_map + l1_map,
                        FEAT + l0_map + l1_map + l2_map,
                        FEAT + l0_map + l1_map + l2_map + l3_map,
                        FEAT + l0_map + l1_map + l2_map + l3_map + l4_map ]  # This is necessary to support batches with no images
                checkpointing: c
                interpolate: True

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-PointPyramid-early-ade20k-interpolate:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            l0: 128
            l1: 64
            l2: 128
            l3: 256
            l4: 512
            l0_map: 32
            l1_map: 32
            l2_map: 64
            l3_map: 128
            l4_map: 256

        down_conv:
            n_early_conv: 5
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + l0_map + l1_map + l2_map + l3_map + l4_map, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: [
                        ADE20KResNet18Layer0,
                        ADE20KResNet18Layer1,
                        ADE20KResNet18Layer2,
                        ADE20KResNet18Layer3,
                        ADE20KResNet18Layer4 ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: [ l0, l1, l2, l3, l4 ]
                    out_mod: [ l0_map, l1_map, l2_map, l3_map, l4_map ]
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: [ 0, 1, 2, 3, 4 ]
                out_channels: [
                        FEAT + l0_map,
                        FEAT + l0_map + l1_map,
                        FEAT + l0_map + l1_map + l2_map,
                        FEAT + l0_map + l1_map + l2_map + l3_map,
                        FEAT + l0_map + l1_map + l2_map + l3_map + l4_map ]  # This is necessary to support batches with no images
                checkpointing: v
                interpolate: True

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-L4-early-cityscapes-interpolate:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            l4: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + l4, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: CityscapesResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: l4
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 0
#                 checkpointing: cav
                interpolate: True

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-L4-early-ade20k-interpolate:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            l4: 512  # out dim of ResNet18Layer4

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + l4, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: ADE20KResNet18TruncatedLayer4
                    frozen: False
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: l4
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 0
                checkpointing: av
                interpolate: True

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-PointFPN-early-cityscapes-interpolate:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            l0: 128
            l1: 64
            l2: 128
            l3: 256
            l4: 512

        down_conv:
            n_early_conv: 5
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + l4, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: [
                        CityscapesResNet18Layer0,
                        CityscapesResNet18Layer1,
                        CityscapesResNet18Layer2,
                        CityscapesResNet18Layer3,
                        CityscapesResNet18Layer4 ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: [ l0, l1, l2, l3, l4 ]
                    out_mod: [ l4, FEAT + l4, FEAT + l4, FEAT + l4, FEAT + l4 ]
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: [ concatenation, residual, residual, residual, residual ]
                branching_index: [ 0, 1, 2, 3, 4 ]
                out_channels: FEAT + l4  # This is necessary to support batches with no images
                checkpointing: c
                interpolate: True

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet34-PointFPN-early-ade20k-interpolate:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 32
            in_feat_img: 4
            in_feat_map: 8
            in_feat_attention: 4
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            l0: 128
            l1: 64
            l2: 128
            l3: 256
            l4: 512

        down_conv:
            n_early_conv: 5
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 2, 3, 4, 6 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + l4, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: [
                        ADE20KResNet18Layer0,
                        ADE20KResNet18Layer1,
                        ADE20KResNet18Layer2,
                        ADE20KResNet18Layer3,
                        ADE20KResNet18Layer4 ]
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: GroupBimodalCSRPool
                    in_map: 8
                    in_mod: [ l0, l1, l2, l3, l4 ]
                    out_mod: [ l4, FEAT + l4, FEAT + l4, FEAT + l4, FEAT + l4 ]
                    num_groups: 4
                    use_mod: False
                    map_encoder: DeepSetFeat
                    use_num: True
                fusion:
                    module_name: BimodalFusion
                    mode: [ concatenation, residual, residual, residual, residual ]
                branching_index: [ 0, 1, 2, 3, 4 ]
                out_channels: FEAT + l4  # This is necessary to support batches with no images
                checkpointing: c
                interpolate: True

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]

small_2d_3d:
    # 28.1 M params - 109.4 Mo on the GPU - ~2.7 ko/pixel at training time
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone: # backbone offset specific for Sparse conv application builder
        define_constants:
            in_feat: 2
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            out_feat_img_0: 128  # out dim of CityscapesResNet18

        down_conv:
            module_name: ResNetDown
            block: block
            conv3d_after_fusion: False
            N: [ 0, 1, 1, 1, 1 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
              [
                  [ FEAT + out_feat_img_0, 4*in_feat ],
                  [ 4*in_feat, in_feat ],
                  [ in_feat, 2*in_feat ],
                  [ 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, 8*in_feat ],
              ]

            image:
                down_conv:
                    module_name: CityscapesResNet18TruncatedLayer0
                atomic_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                view_pooling:
                    module_name: BimodalCSRPool
                    mode: max
                fusion:
                    module_name: BimodalFusion
                    mode: concatenation
                branching_index: 0
                out_channels: FEAT + out_feat_img_0  # This is necessary to support batches with no images
#                 checkpointing: cav

        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                  [ 8*in_feat, 4*in_feat, 4*in_feat ],
                  [ 4*in_feat, 2*in_feat, 4*in_feat ],
                  [ 4*in_feat, in_feat, 3*in_feat ],
                  [ 3*in_feat, 4*in_feat, 3*in_feat ],
                  [ 3*in_feat, 0, 3*in_feat ],
                ]