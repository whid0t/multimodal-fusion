# @package models
defaults:
  - segmentation/default

ResUNet34:
  class: sparseconv3d.APIModel
  conv_type: "SPARSE"
  backend: "torchsparse"
  backbone:
    define_constants:
      in_feat: 32
      block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
    down_conv:
      module_name: ResNetDown
      block: block
      N: [ 0, 1, 2, 2, 3 ]
      down_conv_nn:
        [
          [ FEAT, in_feat ],
          [ in_feat, in_feat ],
          [ in_feat, 2*in_feat ],
          [ 2*in_feat, 4*in_feat ],
          [ 4*in_feat, 8*in_feat ],
        ]
      kernel_size: [3, 2, 2, 2, 2]
      stride: [ 1, 2, 2, 2, 2 ]
    up_conv:
      block: block
      module_name: ResNetUp
      N: [ 1, 1, 1, 1, 1 ]
      up_conv_nn:
        [
          [ 8*in_feat, 4*in_feat, 4*in_feat ],
          [ 4*in_feat, 2*in_feat, 4*in_feat ],
          [ 4*in_feat, in_feat, 3*in_feat ],
          [ 3*in_feat, in_feat, 3*in_feat ],
          [ 3*in_feat, 0, 3*in_feat ],
        ]
      kernel_size: [2, 2, 2, 2, 3]
      stride: [ 2, 2, 2, 2, 1 ]

Res16UNet34:
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone:
        define_constants:
            in_feat: 32
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0, 2, 3, 4, 6 ]
            down_conv_nn:
                [
                    [ FEAT, in_feat ],
                    [ in_feat, in_feat ],
                    [ in_feat, 2*in_feat ],
                    [ 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, 8*in_feat ],
                ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            up_conv_nn:
                [
                    [ 8*in_feat, 4*in_feat, 4*in_feat ],
                    [ 4*in_feat, 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, in_feat, 3*in_feat ],
                    [ 3*in_feat, in_feat, 3*in_feat ],
                    [ 3*in_feat, 0, 3*in_feat ],
                ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]

Res16UNet21-12:
# 12.8 M params - 50.4 Mo on the GPU
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone:
        define_constants:
            in_feat: 32
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0, 2, 2, 2, 2 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
                [
                    [ FEAT, in_feat ],
                    [ in_feat, in_feat ],
                    [ in_feat, 2*in_feat ],
                    [ 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, 8*in_feat ],
                ]
        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2 ]
            stride: [ 2, 2, 2, 2 ]
            up_conv_nn:
                [
                    [ 8*in_feat, 4*in_feat, 4*in_feat ],
                    [ 4*in_feat, 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, in_feat, 2*in_feat ],
                    [ 2*in_feat, in_feat, in_feat ],
                ]

Res16UNet21-15:
# 13.0 M params - 51.4 Mo on the GPU
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone:
        define_constants:
            in_feat: 32
            block: ResBlock
        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0, 2, 2, 2, 2 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
                [
                    [ FEAT, in_feat ],
                    [ in_feat, in_feat ],
                    [ in_feat, 2*in_feat ],
                    [ 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, 8*in_feat ],
                ]
        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                    [ 8*in_feat, 4*in_feat, 4*in_feat ],
                    [ 4*in_feat, 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, in_feat, 2*in_feat ],
                    [ 2*in_feat, in_feat, 2*in_feat ],
                    [ 2*in_feat, 0, in_feat ],
                ]

Res16UNet21-12-large:
# xxx M params - xxx Mo on the GPU
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone:
        define_constants:
            in_feat: 32
            block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0, 2, 2, 2, 2 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
                [
                    [ FEAT, in_feat ],
                    [ in_feat, in_feat ],
                    [ in_feat, 2*in_feat ],
                    [ 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, 8*in_feat ],
                ]
        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2 ]
            stride: [ 2, 2, 2, 2 ]
            up_conv_nn:
                [
                    [ 8*in_feat, 4*in_feat, 4*in_feat ],
                    [ 4*in_feat, 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, in_feat, 3*in_feat ],
                    [ 3*in_feat, in_feat, 3*in_feat ],
                ]

Res16UNet21-15-large:
# xxx M params - xxx Mo on the GPU
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone:
        define_constants:
            in_feat: 32
            block: ResBlock
        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0, 2, 2, 2, 2 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
                [
                    [ FEAT, in_feat ],
                    [ in_feat, in_feat ],
                    [ in_feat, 2*in_feat ],
                    [ 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, 8*in_feat ],
                ]
        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                    [ 8*in_feat, 4*in_feat, 4*in_feat ],
                    [ 4*in_feat, 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, in_feat, 3*in_feat ],
                    [ 3*in_feat, in_feat, 3*in_feat ],
                    [ 3*in_feat, 0, 3*in_feat ],
                ]

Res16UNet13-12:
# 8.1 M params - 31.3 Mo on the GPU
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone:
        define_constants:
            in_feat: 32
            block: ResBlock
        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0, 1, 1, 1, 1 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
                [
                    [ FEAT, in_feat ],
                    [ in_feat, in_feat ],
                    [ in_feat, 2*in_feat ],
                    [ 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, 8*in_feat ],
                ]
        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2 ]
            stride: [ 2, 2, 2, 2 ]
            up_conv_nn:
                [
                    [ 8*in_feat, 4*in_feat, 4*in_feat ],
                    [ 4*in_feat, 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, in_feat, 2*in_feat ],
                    [ 2*in_feat, in_feat, in_feat ],
                ]

Res16UNet13-15:
# 8.3 M params - 32.4 Mo on the GPU
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone:
        define_constants:
            in_feat: 32
            block: ResBlock
        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 0, 1, 1, 1, 1 ]
            kernel_size: [ 3, 2, 2, 2, 2 ]
            stride: [ 1, 2, 2, 2, 2 ]
            down_conv_nn:
                [
                    [ FEAT, in_feat ],
                    [ in_feat, in_feat ],
                    [ in_feat, 2*in_feat ],
                    [ 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, 8*in_feat ],
                ]
        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 1, 1, 1, 1, 1 ]
            kernel_size: [ 2, 2, 2, 2, 3 ]
            stride: [ 2, 2, 2, 2, 1 ]
            up_conv_nn:
                [
                    [ 8*in_feat, 4*in_feat, 4*in_feat ],
                    [ 4*in_feat, 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, in_feat, 2*in_feat ],
                    [ 2*in_feat, in_feat, 2*in_feat ],
                    [ 2*in_feat, 0, in_feat ],
                ]

Res18UNet32-512:
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone:
        define_constants:
            in_feat: 32
            block: ResBlock
        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 1, 1, 1, 1 ]
            kernel_size: [ 5, 2, 2, 2 ]
            stride: [ 2, 2, 2, 2 ]
            down_conv_nn:
                [
                    [ FEAT, 2*in_feat ],
                    [ 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, 8*in_feat ],
                    [ 8*in_feat, 16*in_feat ],
                ]
        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 2, 2, 2, 0 ]
            kernel_size: [ 2, 2, 2, 2 ]
            stride: [ 2, 2, 2, 2 ]
            up_conv_nn:
                [
                    [ 16*in_feat, 8*in_feat, 16*in_feat ],
                    [ 16*in_feat, 4*in_feat, 16*in_feat ],
                    [ 16*in_feat, 2*in_feat, 16*in_feat ],
                    [ 16*in_feat, 0, 16*in_feat ],
                ]

Res18UNet32-256:
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone:
        define_constants:
            in_feat: 32
            block: ResBlock
        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 1, 1, 1, 1 ]
            kernel_size: [ 5, 2, 2, 2 ]
            stride: [ 2, 2, 2, 2 ]
            down_conv_nn:
                [
                    [ FEAT, 2*in_feat ],
                    [ 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, 8*in_feat ],
                    [ 8*in_feat, 16*in_feat ],
                ]
        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 2, 2, 2, 0 ]
            kernel_size: [ 2, 2, 2, 2 ]
            stride: [ 2, 2, 2, 2 ]
            up_conv_nn:
                [
                    [ 16*in_feat, 8*in_feat, 8*in_feat ],
                    [ 8*in_feat, 4*in_feat, 8*in_feat ],
                    [ 8*in_feat, 2*in_feat, 8*in_feat ],
                    [ 8*in_feat, 0, 8*in_feat ],
                ]

Res18UNet32-128:
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone:
        define_constants:
            in_feat: 32
            block: ResBlock
        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 1, 1, 1, 1 ]
            kernel_size: [ 5, 2, 2, 2 ]
            stride: [ 2, 2, 2, 2 ]
            down_conv_nn:
                [
                    [ FEAT, 2*in_feat ],
                    [ 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, 8*in_feat ],
                    [ 8*in_feat, 16*in_feat ],
                ]
        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 2, 2, 2, 0 ]
            kernel_size: [ 2, 2, 2, 2 ]
            stride: [ 2, 2, 2, 2 ]
            up_conv_nn:
                [
                    [ 16*in_feat, 8*in_feat, 4*in_feat ],
                    [ 4*in_feat, 4*in_feat, 4*in_feat ],
                    [ 4*in_feat, 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, 0, 4*in_feat ],
                ]

Res18UNet32-96:
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone:
        define_constants:
            in_feat: 32
            block: ResBlock
        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 1, 1, 1, 1 ]
            kernel_size: [ 5, 2, 2, 2 ]
            stride: [ 2, 2, 2, 2 ]
            down_conv_nn:
                [
                    [ FEAT, 2*in_feat ],
                    [ 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, 8*in_feat ],
                    [ 8*in_feat, 16*in_feat ],
                ]
        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 2, 2, 2, 0 ]
            kernel_size: [ 2, 2, 2, 2 ]
            stride: [ 2, 2, 2, 2 ]
            up_conv_nn:
                [
                    [ 16*in_feat, 8*in_feat, 4*in_feat ],
                    [ 4*in_feat, 4*in_feat, 4*in_feat ],
                    [ 4*in_feat, 2*in_feat, 3*in_feat ],
                    [ 3*in_feat, 0, 3*in_feat ],
                ]

Res18UNet32-64:
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone:
        define_constants:
            in_feat: 32
            block: ResBlock
        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 1, 1, 1, 1 ]
            kernel_size: [ 5, 2, 2, 2 ]
            stride: [ 2, 2, 2, 2 ]
            down_conv_nn:
                [
                    [ FEAT, 2*in_feat ],
                    [ 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, 8*in_feat ],
                    [ 8*in_feat, 16*in_feat ],
                ]
        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 2, 2, 2, 0 ]
            kernel_size: [ 2, 2, 2, 2 ]
            stride: [ 2, 2, 2, 2 ]
            up_conv_nn:
                [
                    [ 16*in_feat, 8*in_feat, 4*in_feat ],
                    [ 4*in_feat, 4*in_feat, 4*in_feat ],
                    [ 4*in_feat, 2*in_feat, 2*in_feat ],
                    [ 2*in_feat, 0, 2*in_feat ],
                ]

Res18UNet32-32:
    class: sparseconv3d.APIModel
    conv_type: "SPARSE"
    backend: "torchsparse"
    backbone:
        define_constants:
            in_feat: 32
            block: ResBlock
        down_conv:
            module_name: ResNetDown
            block: block
            N: [ 1, 1, 1, 1 ]
            kernel_size: [ 5, 2, 2, 2 ]
            stride: [ 2, 2, 2, 2 ]
            down_conv_nn:
                [
                    [ FEAT, 2*in_feat ],
                    [ 2*in_feat, 4*in_feat ],
                    [ 4*in_feat, 8*in_feat ],
                    [ 8*in_feat, 16*in_feat ],
                ]
        up_conv:
            block: block
            module_name: ResNetUp
            N: [ 2, 2, 2, 0 ]
            kernel_size: [ 2, 2, 2, 2 ]
            stride: [ 2, 2, 2, 2 ]
            up_conv_nn:
                [
                    [ 16*in_feat, 8*in_feat, 4*in_feat ],
                    [ 4*in_feat, 4*in_feat, 3*in_feat ],
                    [ 3*in_feat, 2*in_feat, 2*in_feat ],
                    [ 2*in_feat, 0, in_feat ],
                ]
